<?php 
/*
 * Copyright (C) 2015 Marcel Bollmann <bollmann@linguistics.rub.de>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */ ?>
<?php
require_once __DIR__."/@CORA_REL_WEB_DIR@/lib/cfg.php";
require_once __DIR__."/@CORA_REL_WEB_DIR@/lib/install.php";

$DBPATH = __DIR__."/@CORA_REL_DB_DIR@";
$DBMIGRPATH = "$DBPATH/migration";
$NOTWIN = (strtoupper(substr(PHP_OS, 0, 3)) !== 'WIN');

// Parse options
$options = getopt("o:u:p:h");
if (array_key_exists("h", $options)) {
?>

Prepares a script to create/update the CorA database.

    Usage:
    <?php echo $argv[0]; ?> [-o <outfile>] [-u <username> -p <password>]

    If this is your first-time installation of Cora, or if no user account
    with administrator rights exists, a new account with the credentials
    <username> and <password> will be created.  If those are not given,
    the script for prompt for them.

    The resulting SQL script will be written to <outfile>; if <outfile>
    is not given, it defaults to "make_coradb.sql".

<?php
    exit;
}

$admin = array();
if (array_key_exists("u", $options)) {
  $admin['user'] = $options['u'];
}
if (array_key_exists("p", $options)) {
  $admin['password'] = $options['p'];
}
if (array_key_exists("o", $options)) {
  $outfile = $options["o"];
} else {
  $outfile = "make_coradb.sql";
}
$output = array();

// Global functions
function promptForAdminUser($installer, $admin) {
  global $NOTWIN;
  $user = isset($admin['user']) ? $admin['user'] : null;
  $pass = isset($admin['password']) ? $admin['password'] : null;
  while(!$user) {
    echo "Choose a username: ";
    $user = trim(fgets(STDIN));
    if (!$installer->isValidAccountName($user)) {
      echo "This username is not valid, or a user with that name already exists.\n";
      $user = null;
    }
  }
  while(!$pass) {
    echo "Choose a password: ";
    if ($NOTWIN) { system('stty -echo'); }
    $pass = rtrim(fgets(STDIN), PHP_EOL);
    if ($NOTWIN) { system('stty echo'); echo PHP_EOL; }
    if (!$pass) {
      echo "Password cannot be empty.\n";
    }
  }
  echo "Creating an account for user '$user' with administrator rights.\n";
  echo "You can use this account to login into CorA for the first time.\n";
  return array("user" => $user, "password" => $pass);
}

// Try connecting to the database
$dbinfo = Cfg::get('dbinfo');
echo "Connecting to database '{$dbinfo['DBNAME']}'@'{$dbinfo['HOST']}' ";
echo "with user '{$dbinfo['USER']}': ";
$installer = new InstallHelper($dbinfo);
$can_connect = $installer->canConnect();
echo ($can_connect ? "success" : "failed");
echo "\n";

if ($can_connect) {
  // Database migration
  echo "Checking database version: ";
  $curr_version = $installer->getDBVersion();
  $req_version = Cfg::get("db_version");
  echo "'$curr_version' (required: '$req_version')\n";
  if ($curr_version != $req_version) {
    echo "Searching for an automatic migration path in '$DBMIGRPATH'...";
    $path = $installer->findMigrationPath($curr_version, $req_version, $DBMIGRPATH);
    echo "\n";
    if (!$path) {
      echo "Could NOT find an upgrade path from '$curr_version' to '$req_version'\n\n";
      echo <<<TEXT
Database update is required, but cannot be performed automatically.  Maybe the
directory for the database migration scripts is wrong or corrupted, or your
CorA database contains invalid versioning information.  You may need to perform
the database migration manually.

TEXT;
      exit(1);
    }
    $output[] = "USE `".Cfg::get('dbinfo')['DBNAME']."`;\n";
    foreach ($path as $filename) {
      $output[] = file_get_contents($filename);
    }
    $output[] = $installer->generateSQLforVersionString();
  }
  // Verify system user
  if (!$installer->correctSystemUser()) {
    $installer->fixSystemUser();
  }
}
else { // !$can_connect
  echo str_repeat("=", 80) . "\n";
  echo "Assuming first-time installation!\n";
  echo "If you are NOT setting up CorA for the first time, ABORT THIS SCRIPT NOW\n";
  echo "and check the settings in your configuration file.\n";
  echo str_repeat("=", 80) . "\n\n";
  $admin = promptForAdminUser($installer, $admin);
  $output = array(
    $installer->generateSQLforDatabaseCreation(),
    file_get_contents($DBPATH."/coradb.sql"),
    file_get_contents($DBPATH."/coradb-data.sql"),
    $installer->generateSQLforAccount($admin),
    $installer->generateSQLforGrants(),
    $installer->generateSQLforVersionString()
  );
}

if (!$output) {
  echo "No database update required.\n";
}
else {
  $fh = fopen($outfile, "w");
  foreach ($output as $outstring) {
    fwrite($fh, $outstring);
    fwrite($fh, "\n");
  }
  $success = fclose($fh);

  if ($success) {
    echo "\nSuccessfully generated '$outfile'!\n";
    echo "Run the generated script against your MySQL instance, e.g. by executing";
    echo "\n\n    mysql -uroot -p <$outfile\n\n";
    echo "to commit these changes to your database.\n";
  }
}

?>
