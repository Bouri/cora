#!/bin/bash

# 03/2016 Marcel Bollmann

# This script can be used to easily invoke CMake and build CorA.  It supports
# the following command-line arguments:
#
#     debug - Turns debug mode on (default)
#   release - Turns debug mode off
#     clean - Deletes the build directory before calling CMake; **but** keeps
#             any existing `config.php` file so local settings do not get
#             lost.
#       zip - Creates a file "current_build.tar.gz" with the current build
#
# We also set the directory for external downloads to be outside of the build
# directory, so external tools don't get re-downloaded for every clean build.

DEBUGMODE=ON
BUILDZIP=OFF

exists_in_path () {
  case $(command -v -- "$1") in
    /*) return 0;;
    alias\ *) return 1;; # alias
    *) return 1;; # built-in or function
  esac
}

for var in "$@"; do
    if [ "$var" = "clean" ]; then
        if [ -d ./build ]; then
            if [ -f ./build/www/config.php ]; then
                CONFIGFILE=$(mktemp)
                cp ./build/www/config.php "$CONFIGFILE"
            fi
            rm -rf ./build
        fi
    elif [ "$var" = "debug" ]; then
        DEBUGMODE=ON
    elif [ "$var" = "release" ]; then
        DEBUGMODE=OFF
    elif [ "$var" = "zip" ]; then
        BUILDZIP=ON
    fi
done

if [ ! -d ./build ]; then
    mkdir build/
fi

cd build/
cmake -DDEBUG_MODE=$DEBUGMODE -DWITH_EXPENSIVE_TESTS=NO -DEXTERNALS_DOWNLOAD_DIR=../cmake-downloads ../
make && make docs

if [ "$BUILDZIP" = "ON" ]; then
    ZIPDIR=$(mktemp -d)
    mkdir "$ZIPDIR/cora"
    cp -r www "$ZIPDIR/cora/www"
    cp -r docs/user "$ZIPDIR/cora/docs"
    cp -r ../README* "$ZIPDIR/cora"
    tar czf current_build.tar.gz -C "$ZIPDIR" cora
    rm -rf "$ZIPDIR"
fi

if [[ -n "$CONFIGFILE" && -f "$CONFIGFILE" ]]; then
    mv "$CONFIGFILE" www/config.php
    chmod 664 www/config.php
fi

if exists_in_path restorecon; then
    restorecon -R .
fi
